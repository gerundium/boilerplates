---
services:
  homepage:
    image: ghcr.io/gethomepage/homepage:v1.3.2
    container_name: homepage
    ports:
      - ${PORT}:3000
    environment:
      HOMEPAGE_ALLOWED_HOSTS: ${HOMEPAGE_ALLOWED_HOSTS} # required, may need port. See gethomepage.dev/installation/#homepage_allowed_hosts
      PUID: ${HOMEPAGE_VAR_PUID}
      PGID: ${HOMEPAGE_VAR_PGID}
      LOG_LEVEL: debug
      HOMEPAGE_VAR_PROXMOX_USERNAME: ${HOMEPAGE_VAR_PROXMOX_USERNAME}
      HOMEPAGE_VAR_PROXMOX_PASSWORD: ${HOMEPAGE_VAR_PROXMOX_PASSWORD}
      PORT: 3000
      #- HOMEPAGE_VAR_TRUENAS_KEY=${HOMEPAGE_VAR_TRUENAS_KEY}
      #- HOMEPAGE_VAR_PORTAINER_KEY=${HOMEPAGE_VAR_PORTAINER_KEY}
      #- HOMEPAGE_VAR_AUTHENTIK_KEY=${HOMEPAGE_VAR_AUTHENTIK_KEY}
      #- HOMEPAGE_VAR_HOMEASSISTANT_KEY=${HOMEPAGE_VAR_HOMEASSISTANT_KEY}
    volumes:
      - $DOCKERDIR/appdata/homepage/config:/app/config # Make sure your local config directory exists
      - $DOCKERDIR/appdata/homepage/images:/app/public/images
      - $DOCKERDIR/appdata/homepage/icons:/app/public/icons
      - /var/run/docker.sock:/var/run/docker.sock:ro # (optional) For docker integrations, see alternative methods
    labels:
      # Traefik Labels
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.homepage.entrypoints=websecure"
      - "traefik.http.routers.homepage.rule=(Host(`$OVERWRITEHOST`))"
      - "traefik.http.routers.homepage.tls=true"
      - "traefik.http.routers.homepage.tls.certresolver=letsencrypt"
      - "traefik.docker.network=t3_proxy"
      ## HTTP Services
      - "traefik.http.routers.homepage.service=homepage"
      - "traefik.http.services.homepage.loadbalancer.server.port=3000"
    networks:
      - t3_proxy
    restart: unless-stopped
